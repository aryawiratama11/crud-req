{
  "_args": [
    [
      {
        "raw": "react-flexbox-grid",
        "scope": null,
        "escapedName": "react-flexbox-grid",
        "name": "react-flexbox-grid",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/quroll/Projects/skripsi/react-pengadaan"
    ]
  ],
  "_from": "react-flexbox-grid@latest",
  "_id": "react-flexbox-grid@1.1.3",
  "_inCache": true,
  "_location": "/react-flexbox-grid",
  "_nodeVersion": "6.3.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/react-flexbox-grid-1.1.3.tgz_1493915614413_0.5581486334558576"
  },
  "_npmUser": {
    "name": "roylee0704",
    "email": "roylee0704@gmail.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-flexbox-grid",
    "scope": null,
    "escapedName": "react-flexbox-grid",
    "name": "react-flexbox-grid",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-flexbox-grid/-/react-flexbox-grid-1.1.3.tgz",
  "_shasum": "4e61c7ff68d1eb1ae131c01a7c29b39803c54a0e",
  "_shrinkwrap": null,
  "_spec": "react-flexbox-grid",
  "_where": "/Users/quroll/Projects/skripsi/react-pengadaan",
  "author": {
    "name": "Roy Lee",
    "email": "roylee0704@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/roylee0704/react-flexbox-grid/issues"
  },
  "dependencies": {
    "flexboxgrid": "^6.3.0",
    "prop-types": "^15.5.8"
  },
  "description": "A set of React components implementing flexboxgrid with the power of CSS Modules",
  "devDependencies": {
    "@types/react": "*",
    "autoprefixer": "^6.0.3",
    "babel-cli": "^6.4.1",
    "babel-core": "^6.24.1",
    "babel-eslint": "^7.2.1",
    "babel-loader": "^6.4.1",
    "babel-plugin-react-transform": "^2.0.0",
    "babel-polyfill": "^6.23.0",
    "babel-preset-env": "^1.4.0",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-react": "^6.24.1",
    "babel-preset-stage-1": "^6.24.1",
    "cpx": "^1.2.1",
    "cross-env": "^1.0.4",
    "css-loader": "^0.21.0",
    "eslint": "^1.10.1",
    "eslint-config-airbnb": "^1.0.0",
    "eslint-plugin-react": "^3.10.0",
    "expect": "^1.13.0",
    "express": "^4.13.3",
    "extract-text-webpack-plugin": "^0.8.2",
    "flexboxgrid": "^6.3.0",
    "isparta": "^4.0.0",
    "jsdom": "^7.0.2",
    "karma": "^1.6.0",
    "karma-mocha": "^1.3.0",
    "karma-phantomjs-launcher": "^1.0.4",
    "karma-webpack": "^2.0.3",
    "mocha": "^3.1.2",
    "node-sass": "^3.4.2",
    "phantomjs-prebuilt": "^2.1.14",
    "postcss-loader": "^0.7.0",
    "react": "^15.5.4",
    "react-addons-test-utils": "^15.5.1",
    "react-dom": "^15.5.4",
    "react-hot-loader": "^1.3.0",
    "redbox-react": "^1.1.1",
    "rimraf": "^2.4.4",
    "sass-loader": "^3.1.2",
    "style-loader": "^0.12.3",
    "webpack": "^1.12.9",
    "webpack-dev-middleware": "^1.4.0",
    "webpack-hot-middleware": "^2.4.1"
  },
  "directories": {},
  "dist": {
    "shasum": "4e61c7ff68d1eb1ae131c01a7c29b39803c54a0e",
    "tarball": "https://registry.npmjs.org/react-flexbox-grid/-/react-flexbox-grid-1.1.3.tgz"
  },
  "gitHead": "362dba5a3f80650a5526fc3921e7e2023ca2874d",
  "homepage": "https://github.com/roylee0704/react-flexbox-grid",
  "keywords": [
    "css modules",
    "flexbox",
    "grid",
    "react",
    "react-component"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "roylee0704",
      "email": "roylee0704@gmail.com"
    }
  ],
  "name": "react-flexbox-grid",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^0.14.3 || ^15.5.4 || ^16.0.0"
  },
  "readme": "# react-flexbox-grid\n[![npm version](https://badge.fury.io/js/react-flexbox-grid.svg)](https://badge.fury.io/js/react-flexbox-grid)\n[![Build Status](https://travis-ci.org/roylee0704/react-flexbox-grid.svg)](https://travis-ci.org/roylee0704/react-flexbox-grid)\n[![NPM Status](http://img.shields.io/npm/dm/react-flexbox-grid.svg?style=flat)](https://www.npmjs.org/package/react-flexbox-grid)\n\n\n`react-flexbox-grid` is a set of React components that implement [flexboxgrid.css](https://goo.gl/imrHBZ). It even has an optional support for [CSS Modules](https://github.com/webpack-contrib/css-loader#css-modules) with some extra configuration.\n\n\n**http://roylee0704.github.io/react-flexbox-grid/**\n\n\nSetup\n-----\n\n### Installation\n\n`react-flexbox-grid` can be installed as an [npm package](https://www.npmjs.com/package/react-flexbox-grid):\n\n```\nnpm install --save react-flexbox-grid\n```\n\n### Minimal configuration\n\nThe recommended way to use `react-flexbox-grid` is with a tool like [webpack](https://webpack.js.org/) or [Meteor](https://www.meteor.com/), make sure you set it up to support requiring CSS files. For example, the minimum required loader configuration for webpack would look like this:\n\n```js\n{\n  test: /\\.css$/,\n  loader: 'style-loader!css-loader',\n  include: /flexboxgrid/\n}\n```\n\n`react-flexbox-grid` imports the styles from `flexboxgrid`, that's why we're configuring the loader for it.\n\n### CSS Modules\n\nIf you want to use CSS Modules (this is _mandatory_ for versions earlier than v1), webpack's [`css-loader`](https://github.com/webpack-contrib/css-loader) supports this by passing `modules` param in the loader configuration.\n\nFirst, install `style-loader` and `css-loader` as development dependencies:\n\n```\nnpm install --save-dev style-loader css-loader\n```\n\nNext, add a loader for `flexboxgrid` with CSS Modules enabled:\n\n```js\n{\n  test: /\\.css$/,\n  loader: 'style-loader!css-loader?modules',\n  include: /flexboxgrid/\n}\n```\n\nMake sure you don't have another CSS loader which also affects `flexboxgrid`. In case you do, exclude `flexboxgrid`, for example:\n\n```js\n{\n  test: /\\.css$/,\n  loader: 'style-loader!css-loader!postcss-loader',\n  include: path.join(__dirname, 'node_modules'), // oops, this also includes flexboxgrid\n  exclude: /flexboxgrid/ // so we have to exclude it\n}\n```\n\nOtherwise you would end up with an [obscure error](https://github.com/roylee0704/react-flexbox-grid/issues/94#issuecomment-282825720) because webpack stacks loaders together, it doesn't override them.\n\n### Isomorphic support\n\nSee [this comment](https://github.com/roylee0704/react-flexbox-grid/issues/28#issuecomment-198758253).\n\n\n### Not using a bundler?\n\nIf you want to use `react-flexbox-grid` the old-fashioned way, you must generate a build with all the CSS and JavaScript and include it in your `index.html`. The components will then be exposed in the `window` object.\n\n\nUsage\n-----\n\nNow you can import and use the components:\n\n```jsx\nimport React from 'react';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Grid fluid>\n        <Row>\n          <Col xs={6} md={3}>\n            Hello, world!\n          </Col>\n        </Row>\n      </Grid>\n    );\n  }\n}\n```\n\n### Gotcha\n\nFor the time being always use `fluid` for `<Grid>` to prevent [horizontal overflow issues](https://github.com/kristoferjoseph/flexboxgrid/issues/144).\n\n\nExample\n-------\nLooking for a complete example? Head over to [react-flexbox-grid-example](https://github.com/roylee0704/react-flexbox-grid-example).\n\n\nAdvanced composition\n-------\n\nWe also export functions for generating Row and Column class names for use in other components.\n\nFor example, suppose you're using a third party component that accepts `className` and you would like it to be rendered as `Col`.  You could do so by extracting the column sizing props that `MyComponent` uses and then pass the generated className on to `SomeComponent`\n\n\n```jsx\nimport React from 'react';\nimport { Row, Col, getRowProps, getColumnProps } from 'react-flexbox-grid';\n// a component that accepts a className\nimport SomeComponent from 'some-package';\n\nexport default function MyComponent(props) {\n  const colProps = getColumnProps(props);\n  const rowProps = getRowProps(props);\n\n  return (\n    <form className={rowProps.className}>\n      <SomeComponent classname={colProps.className} />\n      <input value={props.value} onChange={props.onChange} />\n    </form>\n  );\n}\n\nMyComponent.propTypes = Object.assign({\n  onChange: React.PropTypes.func.isRequired,\n  value: React.PropTypes.string.isRequired,\n}, Col.propTypes, Row.propTypes);  // Re-use existing Row and Col propType validations\n\n// Can now be rendered as: <MyComponent end=\"sm\" sm={8} value=\"my input value\" onChange={...} />\n```\n\nContributors\n-----------\n[![Roy Lee](https://avatars0.githubusercontent.com/u/3850661?v=3&s=144)](https://github.com/roylee0704/) | [![Helder Santana](https://avatars1.githubusercontent.com/u/134727?v=3&s=144)](https://github.com/heldr/) | [![Matija Marohnić](https://avatars2.githubusercontent.com/u/471278?v=3&s=144)](https://github.com/silvenon)\n---|---|---\n[Roy Lee](https://github.com/roylee0704) | [Helder Santana](https://github.com/heldr/) | [Matija Marohnić](https://github.com/silvenon)\n\nLicense\n-------\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/roylee0704/react-flexbox-grid.git"
  },
  "scripts": {
    "build": "cross-env NODE_ENV=production npm run compile",
    "clean": "rimraf ./lib",
    "compile": "babel -d ./lib ./src",
    "lint": "eslint src test",
    "patch": "bumped release patch",
    "prebuild": "npm run clean",
    "prepublish": "npm run build",
    "release": "bumped release",
    "start": "cross-env NODE_ENV=development UV_THREADPOOL_SIZE=100 node ./server",
    "test": "cross-env NODE_ENV=test karma start",
    "test:watch": "cross-env NODE_ENV=test karma start --no-single-run"
  },
  "types": "react-flexbox-grid.d.ts",
  "version": "1.1.3"
}
