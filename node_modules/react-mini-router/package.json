{
  "_args": [
    [
      {
        "raw": "react-mini-router",
        "scope": null,
        "escapedName": "react-mini-router",
        "name": "react-mini-router",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/quroll/Projects/skripsi/react-pengadaan"
    ]
  ],
  "_from": "react-mini-router@latest",
  "_id": "react-mini-router@2.2.0",
  "_inCache": true,
  "_location": "/react-mini-router",
  "_nodeVersion": "7.9.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/react-mini-router-2.2.0.tgz_1493805303239_0.6482873409986496"
  },
  "_npmUser": {
    "name": "cedmax",
    "email": "info@cedmax.net"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {
    "core-js": "1.2.7",
    "loose-envify": "1.3.1",
    "promise": "7.1.1",
    "ua-parser-js": "0.7.12"
  },
  "_requested": {
    "raw": "react-mini-router",
    "scope": null,
    "escapedName": "react-mini-router",
    "name": "react-mini-router",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/react-mini-router/-/react-mini-router-2.2.0.tgz",
  "_shasum": "15b4153aab02c0484833ec0438e579030e6fc9d7",
  "_shrinkwrap": null,
  "_spec": "react-mini-router",
  "_where": "/Users/quroll/Projects/skripsi/react-pengadaan",
  "author": {
    "name": "Larry Myers",
    "email": "larry@larrymyers.com"
  },
  "bugs": {
    "url": "https://github.com/larrymyers/react-mini-router/issues"
  },
  "dependencies": {
    "fbjs": "^0.3.2",
    "path-to-regexp": "^1.0.1",
    "urllite": "^0.5.0"
  },
  "description": "A small url router for React apps.",
  "devDependencies": {
    "cheerio": "^0.18.0",
    "console-polyfill": "^0.2.1",
    "karma": "^1.3.0",
    "karma-chrome-launcher": "^0.1.7",
    "karma-cli": "1.0.1",
    "karma-mocha": "^0.1.10",
    "karma-phantomjs-launcher": "^1.0.2",
    "karma-sauce-launcher": "^0.2.10",
    "karma-webpack": "^1.7.0",
    "mocha": "^2.1.0",
    "react": "^15.4.1",
    "react-dom": "^15.4.1",
    "uglify-js": "^2.4.15",
    "webpack": "^1.12.2"
  },
  "directories": {},
  "dist": {
    "shasum": "15b4153aab02c0484833ec0438e579030e6fc9d7",
    "tarball": "https://registry.npmjs.org/react-mini-router/-/react-mini-router-2.2.0.tgz"
  },
  "gitHead": "f38a527d8a39ca4000d3ff30670e0aee346ac4b5",
  "homepage": "https://github.com/larrymyers/react-mini-router",
  "keywords": [
    "react",
    "router"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "cedmax",
      "email": "info@cedmax.net"
    },
    {
      "name": "larrymyers",
      "email": "larry@larrymyers.com"
    }
  ],
  "name": "react-mini-router",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": ">=15.4.1",
    "react-dom": ">=15.4.1"
  },
  "readme": "**This Project is Looking for Active Maintainers** \n[See Issue #68 to Volunteer](https://github.com/larrymyers/react-mini-router/issues/68)\n\n# React Mini Router\n\n[![Build Status](https://travis-ci.org/larrymyers/react-mini-router.svg?branch=master)](https://travis-ci.org/larrymyers/react-mini-router)\n\nA minimal URL router for [React.js](http://facebook.github.io/react/).\n\nThe router provides a small React.js mixin that is easy to integrate into a root level component.\nIt makes little to no demands on how you structure your application.\n\nRoutes call methods instead of creating components directly.  This makes async data loading outside of\nthe child components straight forward (allowing them to remain stateless). This also makes server\nside rendering straight forward.\n\nThe Router supports the  HTML5 History API and Hash URLs. It requires no special components or markup.\nYou can use regular anchor tags in your html markup to trigger navigation, or use the [navigate](./lib/navigate.js)\nutil method to programmatically trigger routes. \n\nIts only dependencies are [path-to-regexp](https://github.com/component/path-to-regexp),\n[urllite](https://github.com/hzdg/urllite.js) and React >= 0.14.0.\n\nThe complete browser build is 10kb minified and 4kb minified and gzipped.\n\nSee the [example](./example) app for a complete solution that includes server side rendering\nand integrates with [Fluxxor](https://github.com/BinaryMuse/fluxxor) for Store/Dispatch functionality.\n\n**IMPORTANT** If you require React 0.13 or earlier, please install version 1.1.7. Version 2.0.0 \nrequires React 0.14 or newer.\n\n## Install\n\nIf using CommonJS modules and browserify:\n\n    npm install react-mini-router\n\nFor all other browser environments:\n\n    bower install react-mini-router\n\nThe [dist/react-mini-router.js](./dist/react-mini-router.js) build exposes a global ReactMiniRouter variable.\n\n## Usage\n\n    var React = require('react'),\n        RouterMixin = require('react-mini-router').RouterMixin;\n\n    var App = React.createClass({\n\n        mixins: [RouterMixin],\n\n        routes: {\n            '/': 'home',\n            '/message/:text': 'message'\n        },\n\n        render: function() {\n            return this.renderCurrentRoute();\n        },\n\n        home: function() {\n            return <div>Hello World</div>;\n        },\n\n        message: function(text) {\n            return <div>{text}</div>;\n        },\n\n        notFound: function(path) {\n            return <div class=\"not-found\">Page Not Found: {path}</div>;\n        }\n\n    });\n\n    module.exports = App;\n\n### Configuration\n\nBy default the RouterMixin will use hash urls for routes. To enable the HTML5 History API\nwith pushState pass a \"history\" boolean property to the Component. If you're using server rendering\nand intend on focusing primarily on modern browsers it is recommended to enable the History API.\n\nIf a browser doesn't support the History API it will automatically fall back to hash urls.\n\n**NOTE:**  Hash urls will use the hashbang (i.e. #!) format in order to properly support\nthe [ajax crawling](https://developers.google.com/webmasters/ajax-crawling/) Google spec.\n\nExample:\n\n    React.render(\n        App({ history: true }),\n        document.getElementById('app')\n    );\n\nYou can also mount the Router at a root path, and all routes will be matched relative to it:\n\n    React.render(\n        App({ root: '/some/path/to/app' }),\n        document.getElementById('app')\n    );\n\n### Route Definitions and Handler Methods\n\nThe RouterMixin uses path-to-regexp for all route definitions. See the docs on [parameters](https://github.com/component/path-to-regexp#parameters)\nfor the variations allowed when defining urls.\n\nWhen a url matches a route, the handler method is executed. The handler is called with the following arguments:\n\n1. Each matched parameter, in the order it appears in the url.\n2. An object of key/value pairs that represents the parsed url query string.\n\nExample:\n\n    routes: {\n       '/search/:searchQuery': 'searchResults'\n    }\n\n    function searchResults(searchQuery, params) {\n        // logic for getting search results data and rendering component\n    }\n\n    \"/search/giant%20robots?sort=ascending&size=20\" => searchResults(\"giant robots\", { \"sort\": \"ascending\", \"size\": \"20\" })\n\n### The 404 Not Found Route\n\nBy default the RouterMixin will throw an Error if it can't match a route. To render a 404 Not Found\npage just define a 'notFound' method on the component. It takes a single argument, path, which is\nthe url path that failed to match a route definition. Any unmatched route will call this route handler\nif it is defined. See the usage example above for a code example.\n\n### Navigation\n\nAny child anchor elements will have their click events captured, and if their href matches a route\nthe matched route handler will be called.\n\nTo programmatically trigger navigation there is a provided navigate method:\n\n    var navigate = require('react-mini-router').navigate;\n\n    navigate('/foo');\n\nIf you want to update the address bar url, but not trigger routing:\n\n    navigate('/foo', true);\n\n## Server Rendering\n\nSee the [example](./example) app for how to approach server rendering. The short answer\nis that for every url the server must render you should provide the necessary data\nto the root Component as props, including the `path` property.\n\n[React.renderToString](http://facebook.github.io/react/docs/top-level-api.html#react.rendertostring)\ndoes not trigger the Component lifecycle methods, so you must do all async data loading outside\nof the render process.\n\n## Nested Routers\n\nNested routers are supported, though it requires some manual work. The `root` property must\nbe explicitly passed to the nested router, which sets the base url where it will be mounted.\n\nYou also need to provide a wildcard param at the end of any routes that will call route handlers\nthat contain a nested router. The [example](./example) app and tests show how to do this.\n\n## Running the Example App\n\nThe [example](./example) app demonstrates how to use react-mini-router for client and server\nside rendering. To run the app do the following:\n\n    cd example\n    npm install\n    gulp serve\n    \nThen open a new browser window to:\n\n    http://localhost:4000\n\n## Alternatives\n\n* [React Router](https://github.com/rackt/react-router)\n* [React Router Component](https://github.com/andreypopp/react-router-component)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/larrymyers/react-mini-router.git"
  },
  "scripts": {
    "build": "webpack",
    "dist": "npm run build && webpack -p --output-file=react-mini-router.min.js",
    "test": "npm run test-client && npm run test-server",
    "test-client": "karma start --single-run",
    "test-server": "mocha test/server/**/*.test.js"
  },
  "version": "2.2.0"
}
